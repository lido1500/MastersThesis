\documentclass[10pt,a4paper,draft]{article}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
% LT: Pour le pseudo code est-ce le bon package??
\usepackage{algorithmic}
\usepackage{algorithm}


\title{The Math of : Pixel Domain Referenceless Visual Degradation Detection
and Error Concealment for Mobile Video}
\date{}
\author{}
\begin{document}
\maketitle

\newcommand{\ltF}[1]{\mathbf{F}_{#1}}
\newcommand{\ltP}[1]{\mathbf{P}_{#1}}
\newcommand{\ltS}[1]{\mathcal{I}_{#1}}

\newcommand{\ltHG}[1]{\nabla_{#1}^H}
\newcommand{\ltVG}[1]{\nabla_{#1}^V}

\newcommand{\ltBor}[1]{\mathcal{#1}}

\newcommand{\ltBLK}[2]{\mathbf{b}_{#1}(#2)}
\newcommand{\lttBLK}[2]{TB_{#1}(#2)}
\newcommand{\ltCB}[2]{\mathbf{cb}_{#1}(#2)}

\newcommand{\ltR}[1]{\mathbf{R}_{#1}}
\newcommand{\ltB}[1]{\mathbf{B}_{#1}}
\newcommand{\ltBV}[1]{\mathbf{BV}_{#1}}
\newcommand{\ltSTBLK}[1]{STB(#1)}

\newcommand{\ltMIN}[1]{\arg \min_{#1}}
\newcommand{\ltMAX}[1]{\arg \max_{#1}}
 


\section*{Variables}
\subsection*{Frame Variables: }
Let $\ltF{}$ be a 2D matrix of $ W \times H$ pixels of the current frame. \\ $\ltF{x,y}$ is the value of the pixel at position $x$,$y$ in the current frame.\\
Let $\ltP{}$ be a 2D matrix of $ W \times H$ pixels of the frame preceding the current frame. \\ $\ltP{x,y}$ is the value of the pixel at position $x$,$y$ in the frame preceding the current frame.\\
$H$ is the height of the frame in pixels. \\
$W$ is the width of the frame in pixels.
\subsection*{Intervals: }
$\ltS{x}$ = [0, W-1] \\
$\ltS{y}$ = [0, H-1] \\
$\ltS{m}$ = [0, $\frac{H}{M}-1$] \\
$\ltS{n}$ = [0, $\frac{W}{M}-1$] \\
$\ltS{l}$ = [0, M-1]
\subsection*{Block Variables: }
Let blocks be of size $M \times M$. Blocks are considered square, however, this is not a requirement of the proposed solution.
\subsubsection*{Block Borders: }
$\ltBor{N}$ subscript is used to represent the northern border of a block.\\
$\ltBor{E}$ subscript is used to represent the eastern border of a block.\\
$\ltBor{S}$ subscript is used to represent the southern border of a block.\\
$\ltBor{W}$ subscript is used to represent the western border of a block.
\subsection*{Region Variables: }
Let $\ltR{n}$ be a 2D matrix of $W \times H$ pixels for the $n$th region of frame $\ltF{}$. \\ $\ltR{n,x,y}$ is the value of the pixel at position $x$,$y$ of the $n$th region of frame $\ltF{}$.\\
Let $\ltB{n}$ be a 2D matrix $W \times H$ of pixels of the outer border for the $n$th region of frame $\ltF{}$. \\ $\ltB{n,x,y}$ is the value of the pixel at position $x$,$y$ of the $n$th border of frame $\ltF{}$.\\
\subsection*{Thresholds: }
Let $T_b$ be the border distribution minimal threshold.  \\
Let $T_t$ be the temporal blockiness error threshold.

\section*{Blockiness}
\subsection*{Gradients}
Vertical Gradient:
\begin{equation}
\ltVG{x,y}(\ltF{}) = |\ltF{x, M \cdot y} - \ltF{x,M \cdot y+1} | \quad \forall ~ x \in \ltS{x} \mathrm{~and~} y \in \ltS{n}
\end{equation}
Horizontal Gradient:
\begin{equation}
\ltHG{x,y}(\ltF{}) =  |\ltF{M \cdot x,y} - \ltF{M \cdot x+1,y} | \quad \forall ~ x \in \ltS{m} \mathrm{~and~} y \in \ltS{y} 
\end{equation}
\subsection*{Block Borders}
Northern Border:
\begin{equation}
\ltBLK{\ltBor{N},l}{m,n} = \ltVG{M \cdot m + l, n} \quad
\forall ~ m \in \ltS{m} \mathrm{~and~} n \in [1, \frac{H}{M}] \mathrm{~and~} l \in \ltS{l} 
\end{equation}
Eastern Border:
\begin{equation}
\ltBLK{\ltBor{E},l}{m,n} = \ltHG{m+1, M \cdot n + l} \quad \forall ~ m \in \ltS{m} \mathrm{~and~} n \in \ltS{n} \mathrm{~and~} l \in \ltS{l}
\end{equation}
Southern Border:
\begin{equation}
\ltBLK{\ltBor{S},l}{m,n} = \ltVG{M \cdot m + l, n+1} \quad \forall ~ m \in \ltS{m} \mathrm{~and~} n \in \ltS{n} \mathrm{~and~} l \in \ltS{l}
\end{equation}
Western Border:
\begin{equation}
\ltBLK{\ltBor{W},l}{m,n} = \ltHG{m, M \cdot n + l} \quad \forall ~ m \in [1,\frac{W}{M}] \mathrm{~and~} n \in \ltS{n} \mathrm{~and~} l \in \ltS{l}
\end{equation}

\section*{Motion compensation}
\begin{equation}
SAD(x, y, u, v) = \sum_{q=0}^{M-1}\sum_{r=0}^{M-1} | \ltF{x+q,y+r} - \ltP{x+q+u,y+r+v}  |
\end{equation}
\begin{equation}
\begin{array}{l}
(\mathbf{U}_{m,n}, \mathbf{V}_{m,n}) = \ltMIN{u,v} ~ SAD(m \cdot M, n \cdot M, u, v) \\ | \quad (u,v) \in [-p,p] \times [-p, p], ~ \forall ~ m \in \ltS{m}, ~ \forall ~ n \in \ltS{n}
\end{array} 
\end{equation}

\section*{Temporal Blockiness}
\subsection*{Candidate Borders}
Candidate Northern Border:
\begin{equation}
\ltCB{\ltBor{N}, l}{x,y} = | \ltP{x+l,y} - \ltP{x+l,y-1} | ~ \forall ~ l \in \ltS{l}
\end{equation}
Candidate Eastern Border:
\begin{equation}
\ltCB{\ltBor{E}, l}{x,y} = | \ltP{x+M,y+l} - \ltP{x+M-1,y+l} | ~ \forall ~ l \in \ltS{l}
\end{equation}
Candidate Southern Border:
\begin{equation}
\ltCB{\ltBor{S}, l}{x,y} = | \ltP{x+l,y+M} - \ltP{x+l,y+M-1} | ~ \forall ~ l \in \ltS{l}
\end{equation}
Candidate Western Border:
\begin{equation}
\ltCB{\ltBor{W}, l}{x,y} = | \ltP{x,y+l} - \ltP{x-1,y+l} | ~ \forall ~ l \in \ltS{l}
\end{equation}
\subsection*{Temporal Blockiness}
Northern Border:
\begin{multline}
\lttBLK{\ltBor{N}}{m,n} = \sum_{l = 0}^{M} | \ltBLK{\ltBor{N},l}{m,n} - \ltCB{\ltBor{N},l}{m \cdot M+\mathbf{U}_{m,n},n \cdot M+\mathbf{V}_{m,n}} | \\ \forall \quad m \in \ltS{m} \mathrm{~and~} n \in \ltS{n}
\end{multline}
Eastern Border:
\begin{multline}
\lttBLK{\ltBor{E}}{m,n} = \sum_{l = 0}^{M}  | \ltBLK{\ltBor{E},l}{m,n} - \ltCB{\ltBor{E},l}{m \cdot M +\mathbf{U}_{m,n},n \cdot M +\mathbf{V}_{m,n}} | \\ \forall \quad m \in \ltS{m} \mathrm{~and~} n \in \ltS{n}
\end{multline}
Southern Border:
\begin{multline}
\lttBLK{\ltBor{S}}{m,n} = \sum_{l = 0}^{M} | \ltBLK{\ltBor{S},l}{m,n} - \ltCB{\ltBor{S},l}{m \cdot M +\mathbf{U}_{m,n},n \cdot M +\mathbf{V}_{m,n}} | \\ \forall \quad m \in \ltS{m} \mathrm{~and~} n \in \ltS{n}
\end{multline}
Western Border:
\begin{multline}
\lttBLK{\ltBor{W}}{m,n} = \sum_{l = 0}^{M} | \ltBLK{\ltBor{W},l}{m,n} - \ltCB{\ltBor{W},l}{m \cdot M+\mathbf{U}_{m,n},n \cdot M+\mathbf{V}_{m,n}} | \\ \forall \quad m \in \ltS{m} \mathrm{~and~} n \in \ltS{n}
\end{multline}

\section*{Border Distribution}
Temporal Blockiness Sum
\begin{equation}
\ltSTBLK{m,n} = \sum_{i~\in~[\ltBor{N}, \ltBor{E}, \ltBor{S}, \ltBor{W}]}\lttBLK{i}{m,n}\\
\end{equation}
The Block Distribution algorithm is applied, in descending order, to all blocks where $\ltSTBLK{m,n} > T_b$.
\begin{algorithm}
\caption{Border Distribution}
\label{Algo}
\begin{algorithmic}

\STATE \COMMENT{Northern vs Southern Border}
\IF {$\ltSTBLK{m,n} < \ltSTBLK{m,n-1}$} 
	\STATE $\lttBLK{\ltBor{N}}{m,n} = 0$
\ELSE
	\STATE $\lttBLK{\ltBor{S}}{m,n-1} = 0$
\ENDIF
\STATE
\STATE \COMMENT{Eastern vs Western Border}
\IF {$\ltSTBLK{m,n} < \ltSTBLK{m+1,n}$} 
	\STATE $\lttBLK{\ltBor{E}}{m,n} = 0$
\ELSE
	\STATE $\lttBLK{\ltBor{W}}{m+1,n} = 0$
\ENDIF
\STATE
\STATE \COMMENT{Southern vs Northern Border}
\IF {$\ltSTBLK{m,n} < \ltSTBLK{m,n+1}$} 
	\STATE $\lttBLK{\ltBor{S}}{m,n} = 0$
\ELSE
	\STATE $\lttBLK{\ltBor{N}}{m,n+1} = 0$
\ENDIF
\STATE
\STATE \COMMENT{Western vs Eastern Border}
\IF {$\ltSTBLK{m,n} < \ltSTBLK{m-1,n}$} 
	\STATE $\lttBLK{\ltBor{W}}{m,n} = 0$
\ELSE
	\STATE $\lttBLK{\ltBor{E}}{m-1,n} = 0$
\ENDIF 
\end{algorithmic}
\end{algorithm}
\section*{Selective Whole Frame Concealment}
Frame Copy: Let $fc$ be the sum of $STB$ for every block of $\ltP{}$
\begin{equation}
fc=\sum_{m=0}^{\frac{W}{M}-1}\sum_{n=0}^{\frac{H}{M}-1}\ltSTBLK{m, n}
\end{equation}
Erroneous Frame: Let $ef$ be the sum of $STB$ for every block of $\ltF{}$ 
\begin{equation}
ef=\sum_{m=0}^{\frac{W}{M}-1}\sum_{n=0}^{\frac{H}{M}-1}\ltSTBLK{m, n}
\end{equation}
Concealment Frame:
\begin{equation}
cf =
\begin{cases}
\ltF{}, & \mathrm{if~} ef < fc\\
\ltP{}, & \mathrm{otherwise}\\ 
\end{cases}
\end{equation}

\section*{Region Matching Concealment}
The Error Map:
\begin{multline}
\mathbf{eMap}_{m,n} =
\begin{cases}
1, & \mathrm{if~} \ltSTBLK{m,n} > T_t\\
0, & \mathrm{otherwise} \\
\end{cases} \\
\forall \quad m \in \ltS{m} \mathrm{~and~} n \in \ltS{n}
\end{multline}
Grow Error Region: Let $\mathbf{X}$ be a matrix of $\frac{W}{M} \times \frac{H}{M}$
\begin{equation}
\mathbf{G}_{x,y}(\mathbf{X})= \mathbf{X}_{x \bmod M, y \bmod M} |~\forall~ x \in \ltS{x} \mathrm{~and~} y \in \ltS{y}
\end{equation}
Error Regions: Regions are defined by contiguous values of 1 in eMap. Contiguous values of 1 are determined by a 4-connected component labeling algorithm.
\begin{equation}
\ltR{} = \mathbf{G}(\mathbf{CC}(\mathbf{eMap}))
\end{equation}
Dilation: As defined by Gonzalez and Woods
\begin{equation}
\mathbf{A} \oplus \mathbf{B} = \{z|(\mathbf{\hat{B}})_z \cap \mathbf{A} \neq \varnothing \}
\end{equation}
Outer border:
\begin{equation}
\ltB{n}(\ltR{n}) = (\ltR{n} \oplus \mathbf{SE}) - \ltR{n} 
\end{equation}
Structuring Element:
\begin{equation}
\mathbf{SE} = \begin{bmatrix}
0 & 1 & 0\\ 
1 & 1 & 1\\
0 & 1 & 0\\
\end{bmatrix}
\end{equation}
Hadamard Product: Also known as entrywise product
\begin{equation}
(A \circ B)_{ij} = (A)_{i,j} \cdot (B)_{i,j}
\end{equation}
Outer border pixel values:
\begin{equation}
\ltBV{n}(\ltB{n}) = \ltB{n} \circ \ltF{}
\end{equation}
Border Candidate: Candidate with offset $u,v$ are zero-padded.
\begin{equation}
\mathbf{C}(n,u,v) = \ltP{x+u, y+v} \circ \ltB{n}
\end{equation}
Extrema:
\begin{equation}
minX_n = \ltMIN{x}(x ~|~ \ltB{n,x,y} = 1)
\end{equation}
\begin{equation}
minY_n = \ltMIN{y}(y ~|~ \ltB{n,x,y} = 1)
\end{equation}
\begin{equation}
maxX_n = \ltMAX{x}(x ~|~ \ltB{n,x,y} = 1)
\end{equation}
\begin{equation}
maxY_n = \ltMAX{y}(y ~|~ \ltB{n,x,y} = 1)
\end{equation}
Border SAD:
\begin{equation}
BSAD(n, x, y, u, v) = \sum_{q=0}^{M-1}\sum_{r=0}^{M-1} | \ltB{x+q,y+r} - \mathbf{C}_{x+q,y+r}({n, u, v})  |
\end{equation}
Region Matching:
\begin{multline}
(\mathbf{RU}_{n, x, y}, \mathbf{RV}_{n, x, y}) = \ltMIN{u,v}~ BSAD(n, x, y, u, v) ~ | ~ \forall ~ u \in \ltS{x} \mathrm{~and~} v \in \ltS{y} \\ \mathrm{where}~ minX_n \geqslant 0,~ minY_n \geqslant 0,~ maxX_n < W \mathrm{~and~} maxY_n < H
\end{multline}
\end{document}
